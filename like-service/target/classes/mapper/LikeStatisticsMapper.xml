<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.likeservice.mapper.LikeStatisticsMapper">

    <!-- 结果映射 -->
    <resultMap id="BaseResultMap" type="com.example.likeservice.domain.po.LikeStatistics">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="note_id" property="noteId" jdbcType="BIGINT"/>
        <result column="like_count" property="likeCount" jdbcType="INTEGER"/>
        <result column="created_at" property="createdAt" jdbcType="TIMESTAMP"/>
        <result column="updated_at" property="updatedAt" jdbcType="TIMESTAMP"/>
    </resultMap>

    <!-- 基础字段 -->
    <sql id="Base_Column_List">
        id, note_id, like_count, created_at, updated_at
    </sql>

    <!-- 根据笔记ID查询统计信息 -->
    <select id="selectByNoteId" resultMap="BaseResultMap">
        SELECT 
        <include refid="Base_Column_List"/>
        FROM like_statistics
        WHERE note_id = #{noteId}
    </select>

    <!-- 增加点赞数量 -->
    <update id="incrementLikeCount">
        UPDATE like_statistics 
        SET like_count = like_count + 1, 
            updated_at = NOW() 
        WHERE note_id = #{noteId}
    </update>

    <!-- 减少点赞数量 -->
    <update id="decrementLikeCount">
        UPDATE like_statistics 
        SET like_count = like_count - 1, 
            updated_at = NOW() 
        WHERE note_id = #{noteId} 
        AND like_count > 0
    </update>

    <select id="selectPopularNoteIdsByThreshold" resultType="java.lang.Long">
        SELECT note_id
        FROM like_statistics
        WHERE like_count >= #{minLikes}
          AND created_at >= DATE_SUB(NOW(), INTERVAL #{days} DAY)
        ORDER BY like_count DESC
            LIMIT #{limit}
    </select>

    <select id="selectPopularNoteIdsByPage" resultType="java.lang.Long">
        SELECT note_id
        FROM like_statistics
        WHERE like_count >= #{minLikes}
          AND created_at >= DATE_SUB(NOW(), INTERVAL #{days} DAY)
        ORDER BY like_count DESC
            LIMIT #{offset}, #{size}
    </select>

    <select id="selectPopularNotesCount" resultType="java.lang.Long">
        SELECT COUNT(*)
        FROM like_statistics
        WHERE like_count >= #{minLikes}
          AND created_at >= DATE_SUB(NOW(), INTERVAL #{days} DAY)
    </select>

</mapper> 